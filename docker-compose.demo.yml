# DeepNeed AI 演示版 Docker Compose 配置
# 基于现有的最小化后端，快速启动演示

version: '3.8'

services:
  # 后端服务 (使用现有的最小化后端)
  backend:
    image: python:3.11-slim
    container_name: deepneed-backend-demo
    working_dir: /app
    ports:
      - "8001:8001"
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
    command: >
      sh -c "
        pip install --break-system-packages fastapi uvicorn httpx pydantic &&
        python3 minimal_backend.py
      "
    networks:
      - deepneed-demo
    restart: unless-stopped

  # 前端服务 (简化版本)
  frontend:
    image: node:18-alpine
    container_name: deepneed-frontend-demo
    working_dir: /app
    ports:
      - "5173:5173"
    volumes:
      - ./apps/web:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_API_BASE_URL=http://localhost:8001/api
    command: >
      sh -c "
        npm install -g pnpm &&
        if [ ! -f package.json ]; then
          echo 'package.json not found, creating minimal setup...';
          npm init -y;
          npm install vite @vitejs/plugin-react react react-dom;
        else
          pnpm install || npm install;
        fi &&
        if [ -f vite.config.ts ] || [ -f vite.config.js ]; then
          pnpm dev --host 0.0.0.0 || npm run dev -- --host 0.0.0.0;
        else
          echo 'Vite config not found, starting simple server...';
          npx vite --host 0.0.0.0;
        fi
      "
    depends_on:
      - backend
    networks:
      - deepneed-demo
    restart: unless-stopped

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: deepneed-nginx-demo
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/demo.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - deepneed-demo
    restart: unless-stopped

volumes:
  frontend_node_modules:

networks:
  deepneed-demo:
    driver: bridge
    name: deepneed-demo-network 