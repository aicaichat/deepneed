version: '3.8'

services:
  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: deepneed-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - deepneed-prod

  # 前端服务
  frontend:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: deepneed-frontend-prod
    working_dir: /app
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - VITE_API_URL=${BACKEND_URL}
      - VITE_DOMAIN=${DOMAIN}
    expose:
      - "3000"
    restart: unless-stopped
    networks:
      - deepneed-prod

  # 后端服务
  backend:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: deepneed-backend-prod
    working_dir: /app
    volumes:
      - backend-data:/app/data
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - DATABASE_URL=${DATABASE_URL}
      - DOMAIN=${DOMAIN}
      - FRONTEND_URL=${FRONTEND_URL}
      - BACKEND_URL=${BACKEND_URL}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
      - ENVIRONMENT=production
    expose:
      - "8000"
    restart: unless-stopped
    networks:
      - deepneed-prod

volumes:
  backend-data:
  nginx-logs:

networks:
  deepneed-prod:
    driver: bridge
